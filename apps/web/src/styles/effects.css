/* Efekty dle kanonu. Fallback přes CSS + canvas overlay pro noise. */

/* pulseWave — jemné zvlnění v cyan */
@keyframes pulseWave {
  0% { box-shadow: 0 0 0 0 rgba(0, 255, 255, 0.35); }
  70% { box-shadow: 0 0 0 18px rgba(0, 255, 255, 0); }
  100% { box-shadow: 0 0 0 0 rgba(0, 255, 255, 0); }
}
.effect-pulseWave {
  position: relative;
  border: 1px solid var(--c-neon-cyan);
}
.effect-pulseWave::after {
  content: '';
  position: absolute; inset: 0; border-radius: 12px;
  animation: pulseWave 2.6s ease-out infinite;
}

/* riftGlow — magenta prstenec + chromatic aberace (text/box) */
@keyframes riftGlow {
  0%, 100% { filter: hue-rotate(0deg) saturate(1.1); }
  50% { filter: hue-rotate(3deg) saturate(1.4); }
}
.effect-riftGlow {
  color: var(--c-glitch-magenta);
  text-shadow: 0 0 6px rgba(255,0,255,0.5), 1px 0 rgba(0,255,255,0.1), -1px 0 rgba(246,255,0,0.08);
  box-shadow: 0 0 12px rgba(255,0,255,0.25) inset, 0 0 24px rgba(255,0,255,0.18);
  animation: riftGlow 1.8s ease-in-out infinite;
}

/* kernelBlink — acid žluté varování */
@keyframes kernelBlink {
  0%, 20% { outline-color: transparent; background: rgba(246,255,0,0.06); }
  21%, 30% { outline-color: var(--c-acid-yellow); background: rgba(246,255,0,0.16); }
  31%, 100% { outline-color: transparent; background: rgba(246,255,0,0.06); }
}
.effect-kernelBlink {
  outline: 2px solid transparent;
  animation: kernelBlink 2.2s steps(10, end) infinite;
}

/* fogNoise — noise overlay + jemný parallax */
@keyframes fogNoise {
  0% { background-position: 0 0, 0 0; }
  50% { background-position: 50px 30px, -20px 10px; }
  100% { background-position: 0 0, 0 0; }
}
.effect-fogNoise {
  position: relative;
  overflow: hidden;
}
.effect-fogNoise::before {
  content: '';
  position: absolute; inset: -10%; pointer-events: none;
  background-image:
    radial-gradient(circle at 20% 30%, rgba(192,250,255,0.10), transparent 40%),
    radial-gradient(circle at 80% 70%, rgba(192,250,255,0.08), transparent 50%);
  mix-blend-mode: screen;
  opacity: 1;
  animation: fogNoise 9s ease-in-out infinite;
}
.effect-fogNoise::after {
  content: '';
  position: absolute; inset: 0; pointer-events: none;
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="160" height="160" viewBox="0 0 160 160"><filter id="n"><feTurbulence type="fractalNoise" baseFrequency="0.8" numOctaves="2" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23n)" opacity="0.35"/></svg>');
  opacity: var(--noise-opacity);
}

/* CRT (LoreBookTerminal) – flicker + scanlines */
@keyframes crtFlicker { 0%, 100% { opacity: 0.98; } 50% { opacity: 1; } }
.effect-crtTerminal {
  position: relative;
  background: rgba(0, 13, 26, 0.6);
  border: 1px solid rgba(0, 255, 255, 0.2);
  padding: 16px;
  color: var(--c-ghost-white);
  text-shadow: 0 0 2px rgba(0,255,255,0.3);
  animation: crtFlicker 2.6s steps(30, end) infinite;
}
.effect-crtTerminal::before {
  /* scanlines */
  content: '';
  position: absolute; inset: 0; pointer-events: none;
  background: repeating-linear-gradient(
    to bottom,
    rgba(0,0,0,0.0) 0px,
    rgba(0,0,0,0.0) 2px,
    rgba(255,255,255,0.04) 3px,
    rgba(0,0,0,0.0) 4px
  );
  mix-blend-mode: overlay;
}

/* Typewriter pro demo textu */
/* Animaci aplikujeme na vnitřní span, aby se šířka vztahovala k textu, ne k celé řádce. */
.noising-text {
  /* Stabilní box i po skončení psaní, ať to neškubne o 2px (caret) */
  display: inline-block;
  white-space: normal;
  border-right: 2px solid transparent; /* rezervuj místo pro caret trvale */
}
.SYNTHOMAREADER .tw-line.typewriter,
.SYNTHOMAREADER .typewriter {
  /* Během psaní nech pod řádkem trochu vzduchu, ať to není nalepené na spodku readeru */
  margin-bottom: 1.2rem;
}
.typewriter .noising-text {
  display: inline-block;
  overflow: hidden;
  white-space: normal; /* umožni zalomení podle viewportu */
  border-right: 2px solid var(--c-neon-cyan);
  /* Reveal přes clip-path funguje i na více řádcích */
  animation: reveal var(--typewriter-duration, 6s) steps(var(--typewriter-steps, 60)) both,
             caret var(--caret-duration, 1.2s) steps(1) infinite;
}
@keyframes reveal { from { clip-path: inset(0 100% 0 0); } to { clip-path: inset(0 0 0 0); } }
/* Reintroduce classic typing for hero to keep single-line typing */
@keyframes typing { from { width: 0 } to { width: 100% } }
@keyframes caret { 50% { border-color: transparent } }

/* Respektuj vypnutí animací */
.no-animations .typewriter .noising-text {
  animation: none !important;
}

/* Hero manifest only: JS-driven typing by words. Allow wrap, forbid mid-word breaks, no caret */
#manifest-container .noising-text {
  display: inline;
  white-space: normal !important;
  border-right: 0 !important;
  word-break: keep-all;
  overflow-wrap: normal;
  -webkit-hyphens: manual;
  hyphens: manual;
  animation: none !important;
}

/* Typing glitch micro-effect per newly typed character */
.tw-char { display: inline; position: relative; will-change: filter, transform; }
.tw-char.tw-glitch {
  animation: twGlitchIn .14s ease-out both;
  filter: brightness(1.35);
}
.tw-char.tw-split {
  animation: twSplit .1s ease-out both;
}

@keyframes twGlitchIn {
  0% { text-shadow: 1px 0 var(--accent-primary), -1px 0 var(--accent-secondary); transform: translateY(-1px) skewX(3deg); filter: blur(.3px) brightness(1.6); }
  50% { text-shadow: -1px 0 var(--accent-secondary), 1px 0 var(--accent-primary); transform: translateY(1px) skewX(-2deg); filter: blur(.2px) brightness(1.4); }
  100% { text-shadow: none; transform: none; filter: none; }
}

@keyframes twSplit {
  0% { text-shadow: 2px 0 var(--accent-primary), -2px 0 var(--accent-secondary); transform: translateX(-.5px) skewX(2deg); }
  100% { text-shadow: none; transform: none; }
}

/* Container blip to simulate scanline/chromatic blip */
.noising-text.tw-blip {
  animation: twBlip .14s ease-out both;
}
@keyframes twBlip {
  0% { text-shadow: 2px 0 var(--accent-secondary), -2px 0 var(--accent-primary); filter: brightness(1.2) contrast(1.05); }
  100% { text-shadow: none; filter: none; }
}

@media (prefers-reduced-motion: reduce) {
  .typewriter .noising-text { animation: none !important; border-right: none; }
}

/* Reader-scoped override: zajisti viditelný caret uvnitř SYNTHOMAREADER
   – přebil jsem hero-intro i jiné obecné styly, ale respektuji reduced motion. */
.SYNTHOMAREADER .typewriter .noising-text {
  animation: caret var(--caret-duration, 1.2s) steps(1) infinite !important;
  border-right: 2px solid var(--c-neon-cyan) !important;
}
@media (prefers-reduced-motion: reduce) {
  .SYNTHOMAREADER .typewriter .noising-text { animation: none !important; border-right: none !important; }
}

/* --- Neon Shining for manifest characters --- */
/* Base char node used by typewriter and shining manager */
.noising-char {
  position: relative;
  display: inline;
  will-change: filter, text-shadow, opacity;
  transition: text-shadow 160ms ease, filter 160ms ease, opacity 120ms ease;
}

/* Continuous subtle shine when animations are allowed */
.noising-char.noising {
  text-shadow:
    0 0 1px rgba(255,255,255,0.22),
    0 0 5px var(--accent-primary),
    0 0 10px var(--accent-secondary),
    0 0 14px var(--accent-secondary);
  filter: brightness(1.02) contrast(1.05);
  will-change: text-shadow, filter;
  animation: neonShine 3.2s ease-in-out infinite;
}

@keyframes neonShine {
  0%, 100% { filter: brightness(1.0) contrast(1.0) saturate(1.0); }
  50% { filter: brightness(1.12) contrast(1.08) saturate(1.08); }
}

/* Short bursts triggered from JS for random characters */
.noising-char.flickering {
  text-shadow:
    0 0 2px rgba(255,255,255,0.3),
    0 0 7px var(--accent-primary),
    0 0 14px var(--accent-secondary),
    0 0 20px var(--accent-secondary);
  filter: brightness(1.35) contrast(1.08) saturate(1.06);
  animation: neonFlicker 0.32s steps(2) 1;
}

/* During typing, suppress shining/flicker inside typewriter to keep clean typing style. */
.typewriter .noising-char.noising,
.typewriter .noising-char.flickering,
.typewriter .noising-char.noising-burst {
  animation: none !important;
  text-shadow: none !important;
  filter: none !important;
}

@keyframes neonFlicker {
  0%, 100% { opacity: 1; }
  30% { opacity: 0.72; }
  60% { opacity: 0.88; }
}

/* Short noising pulse independent from base shine */
.noising-char.noising-burst {
  animation: neonNoising 0.28s ease-in-out 1;
}

@keyframes neonNoising {
  0% {
    text-shadow:
      0 0 2px rgba(255,255,255,0.35),
      0 0 8px var(--accent-primary),
      0 0 16px var(--accent-secondary),
      0 0 22px var(--accent-secondary);
    filter: brightness(1.22) contrast(1.12) saturate(1.1);
  }
  100% {
    text-shadow:
      0 0 1px rgba(255,255,255,0.22),
      0 0 5px var(--accent-primary),
      0 0 10px var(--accent-secondary);
    filter: none;
  }
}

/* Respect global animation kill switch */
body:not(.force-shine) .no-animations .noising-char {
  animation: none !important;
  filter: none !important;
}
body:not(.force-shine) .no-animations .noising-char:not(.noising-static) {
  text-shadow: none !important;
}
body:not(.force-shine) .no-animations .noising-char.noising-static {
  /* static, non-animated glow for accessibility mode */
  text-shadow:
    0 0 1px rgba(255,255,255,0.18),
    0 0 4px var(--accent-primary),
    0 0 8px var(--accent-secondary);
}

@media (prefers-reduced-motion: reduce) {
  body:not(.force-shine) .noising-char { animation: none !important; }
  body:not(.force-shine) .noising-char.noising,
  body:not(.force-shine) .noising-char.flickering { animation: none !important; }
}

/* =========================
   Chapter Text Effects (theme-aware)
   ========================= */

/* datastream — subtle horizontal shimmer/scan across text */
@keyframes datastreamShimmer {
  0% { background-position: -120% 0; }
  100% { background-position: 220% 0; }
}
.datastream {
  position: relative;
  background: linear-gradient(90deg,
    transparent 0%, color-mix(in oklab, var(--accent-primary) 12%, transparent) 20%,
    color-mix(in oklab, var(--accent-secondary) 22%, transparent) 50%,
    color-mix(in oklab, var(--accent-primary) 12%, transparent) 80%, transparent 100%);
  background-size: 200% 100%;
  -webkit-background-clip: text; background-clip: text;
  color: inherit;
  animation: datastreamShimmer 3.6s linear infinite;
}
@media (prefers-reduced-motion: reduce) { .datastream { animation: none !important; } }

/* redacted — black bars that occasionally flicker */
@keyframes redactBlink { 0%, 92%, 100% { opacity: 1; } 94% { opacity: .7; } 96% { opacity: .4; } 98% { opacity: .9; } }
.redacted, .redacted span {
  position: relative; color: transparent !important;
}
.redacted::after {
  content: '████████████';
  letter-spacing: .08em; white-space: nowrap; color: var(--text-primary);
  background: currentColor; padding: 0 .15em; border-radius: 2px;
  box-shadow: 0 0 6px var(--shadow-primary);
  animation: redactBlink 2.4s steps(6, end) infinite;
}
@media (prefers-reduced-motion: reduce) { .redacted::after { animation: none !important; } }

/* corrupt — chromatic split + jitter */
@keyframes corruptJitter {
  0%, 100% { filter: none; }
  30% { filter: saturate(1.06) brightness(1.06) hue-rotate(2deg); }
  60% { filter: saturate(1.02) brightness(1.02) hue-rotate(-2deg); }
}
.corrupt {
  text-shadow: 1px 0 var(--accent-primary), -1px 0 var(--accent-secondary);
  animation: corruptJitter 1.2s steps(3, jump-none) infinite;
}
@media (prefers-reduced-motion: reduce) { .corrupt { animation: none !important; } }

/* bios-warning — acid yellow periodic blink for logs */
@keyframes biosBlink { 0%, 70%, 100% { filter: none; } 71%, 86% { filter: brightness(1.25) saturate(1.2); } }
.bios-warning {
  outline: 2px solid transparent; outline-offset: 2px;
  box-shadow: 0 0 10px color-mix(in oklab, var(--accent-warning, #f6ff00) 35%, transparent);
  animation: biosBlink 2.6s steps(10, end) infinite;
}
@media (prefers-reduced-motion: reduce) { .bios-warning { animation: none !important; } }

/* memory-leak — dripping bottom gradient */
@keyframes leakFlow { to { background-position: 0 16px; } }
.memory-leak {
  position: relative;
}
.memory-leak::after {
  content: '';
  position: absolute; left: 0; right: 0; bottom: -2px; height: 14px;
  background: linear-gradient(180deg,
    color-mix(in oklab, var(--accent-secondary) 35%, transparent),
    transparent 70%);
  filter: blur(3px) opacity(.9);
  animation: leakFlow 3.8s linear infinite;
  pointer-events: none;
}
@media (prefers-reduced-motion: reduce) { .memory-leak::after { animation: none !important; } }

/* overheat — heat haze wobble */
@keyframes heatHaze {
  0%,100% { filter: none; }
  50% { filter: blur(.35px) contrast(1.05) saturate(1.07); }
}
.overheat { animation: heatHaze 2.2s ease-in-out infinite; }
@media (prefers-reduced-motion: reduce) { .overheat { animation: none !important; } }

/* echo-ghost — faint duplicated ghost offset */
.echo-ghost {
  position: relative;
  text-shadow: 0 0 6px var(--glow-secondary), 1px 0 rgba(255,0,255,.25), -1px 0 rgba(0,255,255,.25);
}
.echo-ghost::after {
  content: attr(data-echo);
  position: absolute; left: 0; top: 0; transform: translate(1px, 1px);
  opacity: .2; pointer-events: none; filter: blur(.3px);
}

/* static-noise — animated noise overlay on text block (use ::after to not override left-border ::before) */
@keyframes staticDrift { 0% { background-position: 0 0; } 50% { background-position: 40px 20px; } 100% { background-position: 0 0; } }
.static-noise { position: relative; }
.static-noise::after {
  content: '';
  position: absolute; inset: 0; pointer-events: none;
  background: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="120" height="120" viewBox="0 0 120 120"><filter id="n"><feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="1" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23n)" opacity="0.15"/></svg>');
  mix-blend-mode: overlay; animation: staticDrift 6s ease-in-out infinite;
  z-index: 1; /* border pseudo-elements use z-index:2, keep this below */
}
@media (prefers-reduced-motion: reduce) { .static-noise::after { animation: none !important; } }

/* neon-blood — pulsing magenta/red glow */
@keyframes neonPulse { 0%,100% { filter: none; } 50% { filter: brightness(1.1) saturate(1.1); } }
.neon-blood { color: #ff2244; color: color-mix(in oklab, #ff0044 70%, var(--text-primary)); text-shadow: 0 0 6px #ff0044, 0 0 12px #ff00ff; animation: neonPulse 1.8s ease-in-out infinite; }
@media (prefers-reduced-motion: reduce) { .neon-blood { animation: none !important; } }

/* quantum-blur — periodic loss of focus then snap back */
@keyframes quantumBlur { 0%,100% { filter: none; } 45% { filter: blur(.6px) saturate(1.02); } 55% { filter: blur(1px) saturate(1.05); } }
.quantum-blur { animation: quantumBlur 2.8s ease-in-out infinite; }
@media (prefers-reduced-motion: reduce) { .quantum-blur { animation: none !important; } }

/* =========================
   Glitch Background & Themed Video Filters
   ========================= */

/* glitch-bg — přidá scanlines/retro overlay řízené motivem */
.glitch-bg {
  position: relative;
  isolation: isolate; /* create stacking context so negative z works predictably */
}
.glitch-bg::after {
  content: '';
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: -3; /* nejníže: pod videem (-2) i pixel canvas (-1) */
  opacity: var(--retro-canvas-opacity, 0.5);
  background-image: repeating-linear-gradient(
    0deg, transparent, transparent 2px,
    rgba(0, 255, 0, .03) 0, rgba(0, 255, 0, .03) 4px
  );
  mix-blend-mode: overlay;
}

/* themed-video — použij motivem řízené filtry na video vrstvy */
.themed-video {
  filter:
    var(--filter-primary, none)
    contrast(var(--pixelate-contrast, 1))
    saturate(var(--pixelate-saturation, 1));
  opacity: var(--video-opacity, 1);
}

@media (prefers-reduced-motion: reduce) {
  .glitch-bg::after { animation: none !important; }
}

/* =========================
   Library Page (Knihovna)
   ========================= */
.library-page .library-container { padding: 24px; position: relative; z-index: 0; }
.library-title {
  font-weight: 800; letter-spacing: .06em; margin: 0; text-shadow: 0 0 8px var(--shadow-primary);
}
.library-sub { opacity: .75; margin-top: 6px; }
.library-error { color: #ff6; margin-top: 8px; }
.library-empty { margin-top: 12px; opacity: .85; }

.lib-grid { margin-top: 16px; display: grid; gap: 16px; }
.lib-section {
  border: 1px solid var(--border-tertiary, rgba(255,255,255,0.15));
  border-radius: 12px;
  padding: 16px;
  background: color-mix(in oklab, var(--bg-glass, rgba(255,255,255,0.06)) 100%, transparent);
  box-shadow: 0 0 18px color-mix(in oklab, var(--shadow-primary, #0ff) 16%, transparent) inset;
  -webkit-backdrop-filter: blur(6px) saturate(1.02);
  backdrop-filter: blur(6px) saturate(1.02);
}
.lib-section-title { font-size: 20px; font-weight: 700; margin: 0; }
.lib-list { margin-top: 10px; display: grid; gap: 10px; list-style: none; padding: 0; }

.lib-link {
  display: inline-block;
  padding: 9px 14px;
  border-radius: 10px;
  border: 1px solid var(--border-secondary, rgba(255,255,255,0.15));
  background: color-mix(in oklab, var(--bg-glass, rgba(255,255,255,0.06)) 100%, transparent);
  color: inherit; text-decoration: none;
  font-weight: 700;
  text-shadow: 0 0 4px var(--glow-secondary, rgba(0,255,255,.3));
  transition: border-color .18s ease, box-shadow .18s ease, transform .12s ease, filter .18s ease, background .18s ease;
  box-shadow: 0 0 0 0 transparent;
  position: relative;
  overflow: visible;
}
.lib-link:hover {
  border-color: var(--border-primary, currentColor);
  box-shadow: 0 0 12px var(--glow-primary, rgba(0,255,255,.3)), 0 0 2px var(--glow-secondary, rgba(255,0,255,.2));
  transform: translateY(-1px);
  filter: brightness(1.05) saturate(1.04);
  background: color-mix(in oklab, var(--bg-glass, rgba(255,255,255,0.06)) 80%, transparent);
}
.lib-link:focus-visible {
  outline: 2px solid var(--accent-primary, #0ff);
  outline-offset: 2px;
  box-shadow: 0 0 0 3px color-mix(in oklab, var(--accent-primary) 28%, transparent), 0 0 10px var(--glow-primary);
}
.lib-link:active { transform: translateY(0); filter: brightness(0.98); }
.lib-badge { opacity: .6; margin-left: 6px; font-size: .9em; }

@media (prefers-reduced-motion: reduce) {
  .lib-link { transition: none; }
}

/* Glitch hover layers for library links */
.lib-link::before,
.lib-link::after {
  content: attr(data-echo);
  position: absolute;
  inset: 0;
  pointer-events: none;
  opacity: 0;
  mix-blend-mode: screen;
  text-shadow: 0 0 6px var(--glow-primary);
}
.lib-link::before { color: #f0f; transform: translate(0,0); }
.lib-link::after  { color: #0ff; transform: translate(0,0); }

.lib-link:hover::before,
.lib-link:hover::after {
  opacity: 1;
  animation: glitch 0.9s steps(3, jump-none) infinite;
}
.lib-link:hover::before { animation-direction: normal; }
.lib-link:hover::after  { animation-direction: reverse; }

@media (prefers-reduced-motion: reduce) {
  .lib-link:hover::before,
  .lib-link:hover::after { animation: none; opacity: .85; }
}

/* layout + bg utilities for library */
.library-page { position: relative; min-height: 100vh; overflow: hidden; }
.lib-bg { position: fixed; inset: 0; z-index: -2; pointer-events: none; }
.lib-bg-video { width: 100%; height: 100%; object-fit: cover; }
.lib-bg-vignette { position: absolute; inset: 0; background: radial-gradient(ellipse at 30% 20%, rgba(0,0,0,0.25), rgba(0,0,0,0.65)); }

/* pixelation canvas layered above raw video, below content */
.lib-pixel-canvas {
  position: fixed;
  inset: 0;
  z-index: -1; /* nad videem (-2), pod obsahem (0) */
  pointer-events: none;
  opacity: var(--retro-canvas-opacity, 0.6);
  image-rendering: pixelated;
}
